apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  ports:
    - port: 6377
      name: redis
  clusterIP: None
  selector:
    app: redis
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: redis-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: redis-volume-0
  labels:
    type: local
spec:
  storageClassName: redis-storage
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/mnt/redis-0"
---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      app: redis  # has to match .spec.template.metadata.labels
  serviceName: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis  # has to match .spec.selector.matchLabels
    spec:
      containers:
        - name: redis
          image: mirnawaz/redis-spiped:1.0
          imagePullPolicy: Always
          ports:
            - containerPort: 6377
              name: redis
          env:
            - name: REDIS_PASSWORD
              value: "abcd@1234"
          volumeMounts:
            - name: redis-storage
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: redis-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "redis-storage"
        resources:
          requests:
            storage: 2Gi
